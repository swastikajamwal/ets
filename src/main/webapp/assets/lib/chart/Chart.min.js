



<!DOCTYPE html>
<html lang="en" class="   ">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>Chart.js/Chart.min.js at master · nnnick/Chart.js · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="nnnick/Chart.js" name="twitter:title" /><meta content="Chart.js - Simple HTML5 Charts using the &amp;lt;canvas&amp;gt; tag" name="twitter:description" /><meta content="https://avatars2.githubusercontent.com/u/1458051?v=2&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars2.githubusercontent.com/u/1458051?v=2&amp;s=400" property="og:image" /><meta content="nnnick/Chart.js" property="og:title" /><meta content="https://github.com/nnnick/Chart.js" property="og:url" /><meta content="Chart.js - Simple HTML5 Charts using the &lt;canvas&gt; tag" property="og:description" />

    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="55FFEBC4:0873:1B0B6037:53FB5745" name="octolytics-dimension-request_id" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="rh8v6n/6aexjJOqyXLVzNtbJhsdyrAOQmCM1w5oJ7kEA9uzOB3vr2lM6rLhzOYzFfHI+FxyzOz+DtGx8/vP4dw==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-c42e52ca7947fa1d1ee79edddeebf592213d7224.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-690d1864b28aa6d2e824fea6953c01baa82cc813.css" media="all" rel="stylesheet" type="text/css" />
    


    <meta http-equiv="x-pjax-version" content="0de96c373fd14f20605f14146b163b7e">

      
  <meta name="description" content="Chart.js - Simple HTML5 Charts using the &lt;canvas&gt; tag">
  <meta name="go-import" content="github.com/nnnick/Chart.js git https://github.com/nnnick/Chart.js.git">

  <meta content="1458051" name="octolytics-dimension-user_id" /><meta content="nnnick" name="octolytics-dimension-user_login" /><meta content="8843683" name="octolytics-dimension-repository_id" /><meta content="nnnick/Chart.js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="8843683" name="octolytics-dimension-repository_network_root_id" /><meta content="nnnick/Chart.js" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/nnnick/Chart.js/commits/master.atom" rel="alternate" title="Recent Commits to Chart.js:master" type="application/atom+xml">

  </head>


  <body class="logged_out  env-production windows vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions">
        <a class="button primary" href="/join">Sign up</a>
      <a class="button signin" href="/login?return_to=%2Fnnnick%2FChart.js%2Fblob%2Fmaster%2FChart.min.js">Sign in</a>
    </div>

    <div class="site-search repo-scope js-site-search">
      <form accept-charset="UTF-8" action="/nnnick/Chart.js/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/nnnick/Chart.js/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
    </div>

      <ul class="header-nav left">
          <li class="header-nav-item">
            <a class="header-nav-link" href="/explore">Explore</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/features">Features</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://enterprise.github.com/">Enterprise</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog">Blog</a>
          </li>
      </ul>

  </div>
</div>



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">


  <li>
      <a href="/login?return_to=%2Fnnnick%2FChart.js"
    class="minibutton with-count star-button tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <span class="octicon octicon-star"></span>
    Star
  </a>

    <a class="social-count js-social-count" href="/nnnick/Chart.js/stargazers">
      10,957
    </a>

  </li>

    <li>
      <a href="/login?return_to=%2Fnnnick%2FChart.js"
        class="minibutton with-count js-toggler-target fork-button tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-repo-forked"></span>
        Fork
      </a>
      <a href="/nnnick/Chart.js/network" class="social-count">
        3,187
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/nnnick" class="url fn" itemprop="url" rel="author"><span itemprop="title">nnnick</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/nnnick/Chart.js" class="js-current-repository js-repo-home-link">Chart.js</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders" data-issue-count-url="/nnnick/Chart.js/issues/counts">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/nnnick/Chart.js" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /nnnick/Chart.js">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/nnnick/Chart.js/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /nnnick/Chart.js/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class="js-issue-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/nnnick/Chart.js/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /nnnick/Chart.js/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class="js-pull-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/nnnick/Chart.js/pulse/weekly" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /nnnick/Chart.js/pulse/weekly">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/nnnick/Chart.js/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /nnnick/Chart.js/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                
  
<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/nnnick/Chart.js.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/nnnick/Chart.js.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/nnnick/Chart.js" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/nnnick/Chart.js" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>


  <a href="http://windows.github.com" class="minibutton sidebar-button" title="Save nnnick/Chart.js to your computer and use it in GitHub Desktop." aria-label="Save nnnick/Chart.js to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/nnnick/Chart.js/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download nnnick/Chart.js as a zip file"
                   title="Download nnnick/Chart.js as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/nnnick/Chart.js/blob/0a59a3c4dfe9950a06cf239a4d9332c73dcbe6cb/Chart.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:6e1e3ef015fda1916b14bae3af101b0c -->

<div class="file-navigation">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nnnick/Chart.js/blob/feature/version-bump/Chart.min.js"
                 data-name="feature/version-bump"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="feature/version-bump">feature/version-bump</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nnnick/Chart.js/blob/fix/sparse-datasets/Chart.min.js"
                 data-name="fix/sparse-datasets"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="fix/sparse-datasets">fix/sparse-datasets</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nnnick/Chart.js/blob/master/Chart.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nnnick/Chart.js/tree/v1.0.1-beta.4/Chart.min.js"
                 data-name="v1.0.1-beta.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.1-beta.4">v1.0.1-beta.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nnnick/Chart.js/tree/v1.0.1-beta.3/Chart.min.js"
                 data-name="v1.0.1-beta.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.1-beta.3">v1.0.1-beta.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nnnick/Chart.js/tree/v1.0.1-beta.2/Chart.min.js"
                 data-name="v1.0.1-beta.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.1-beta.2">v1.0.1-beta.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nnnick/Chart.js/tree/v1.0.1-beta/Chart.min.js"
                 data-name="v1.0.1-beta"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.1-beta">v1.0.1-beta</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nnnick/Chart.js/tree/v1.0.0-beta/Chart.min.js"
                 data-name="v1.0.0-beta"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.0-beta">v1.0.0-beta</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nnnick/Chart.js/tree/v0.2.0/Chart.min.js"
                 data-name="v0.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.2.0">v0.2.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/nnnick/Chart.js/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button class="js-zeroclipboard minibutton zeroclipboard-button"
          data-clipboard-text="Chart.min.js"
          aria-label="Copy to clipboard"
          data-copied-hint="Copied!">
      <span class="octicon octicon-clippy"></span>
    </button>
  </div>

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/nnnick/Chart.js" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">Chart.js</span></a></span></span><span class="separator"> / </span><strong class="final-path">Chart.min.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
      <img alt="Nick Downie" class="main-avatar" data-user="1458051" height="24" src="https://avatars2.githubusercontent.com/u/1458051?v=2&amp;s=48" width="24" />
      <span class="author"><a href="/nnnick" rel="author">nnnick</a></span>
      <time datetime="2014-08-17T23:21:11+01:00" is="relative-time">August 17, 2014</time>
      <div class="commit-title">
          <a href="/nnnick/Chart.js/commit/8b840ce56be51b61dfc2d4e40e56304c880c541b" class="message" data-pjax="true" title="Pre-release version bump to beta.4">Pre-release version bump to beta.4</a>
      </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>3</strong>  contributors</a></p>
      
    <a class="avatar tooltipped tooltipped-s" aria-label="nnnick" href="/nnnick/Chart.js/commits/master/Chart.min.js?author=nnnick"><img alt="Nick Downie" data-user="1458051" height="20" src="https://avatars0.githubusercontent.com/u/1458051?v=2&amp;s=40" width="20" /></a>
    <a class="avatar tooltipped tooltipped-s" aria-label="BrettBukowski" href="/nnnick/Chart.js/commits/master/Chart.min.js?author=BrettBukowski"><img alt="Brett Bukowski" data-user="224622" height="20" src="https://avatars3.githubusercontent.com/u/224622?v=2&amp;s=40" width="20" /></a>
    <a class="avatar tooltipped tooltipped-s" aria-label="andyburke" href="/nnnick/Chart.js/commits/master/Chart.min.js?author=andyburke"><img alt="Andy Burke" data-user="273857" height="20" src="https://avatars3.githubusercontent.com/u/273857?v=2&amp;s=40" width="20" /></a>


    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Nick Downie" data-user="1458051" height="24" src="https://avatars2.githubusercontent.com/u/1458051?v=2&amp;s=48" width="24" />
            <a href="/nnnick">nnnick</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="Brett Bukowski" data-user="224622" height="24" src="https://avatars1.githubusercontent.com/u/224622?v=2&amp;s=48" width="24" />
            <a href="/BrettBukowski">BrettBukowski</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="Andy Burke" data-user="273857" height="24" src="https://avatars1.githubusercontent.com/u/273857?v=2&amp;s=48" width="24" />
            <a href="/andyburke">andyburke</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>11 lines (11 sloc)</span>
          <span class="meta-divider"></span>
        <span>50.937 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/nnnick/Chart.js/raw/master/Chart.min.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/nnnick/Chart.js/blame/master/Chart.min.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/nnnick/Chart.js/commits/master/Chart.min.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw"
             href="http://windows.github.com" aria-label="Open this file in GitHub for Windows">
              <span class="octicon octicon-device-desktop"></span>
          </a>

            <a class="octicon-button disabled tooltipped tooltipped-w" href="#"
               aria-label="You must be signed in to make or propose changes"><span class="octicon octicon-pencil"></span></a>

          <a class="octicon-button danger disabled tooltipped tooltipped-w" href="#"
             aria-label="You must be signed in to make or propose changes">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
      
  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-line-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-line-code js-file-line"><span class="cm">/*!</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-line-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-line-code js-file-line"><span class="cm"> * Chart.js</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-line-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-line-code js-file-line"><span class="cm"> * http://chartjs.org/</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-line-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-line-code js-file-line"><span class="cm"> * Version: 1.0.1-beta.4</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-line-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-line-code js-file-line"><span class="cm"> *</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-line-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-line-code js-file-line"><span class="cm"> * Copyright 2014 Nick Downie</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-line-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-line-code js-file-line"><span class="cm"> * Released under the MIT license</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-line-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-line-code js-file-line"><span class="cm"> * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-line-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-line-code js-file-line"><span class="cm"> */</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-line-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-line-code js-file-line"><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">Chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">canvas</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">aspectRatio</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">retinaScale</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">};</span><span class="nx">e</span><span class="p">.</span><span class="nx">defaults</span><span class="o">=</span><span class="p">{</span><span class="nx">global</span><span class="o">:</span><span class="p">{</span><span class="nx">animation</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">animationSteps</span><span class="o">:</span><span class="mi">60</span><span class="p">,</span><span class="nx">animationEasing</span><span class="o">:</span><span class="s2">&quot;easeOutQuart&quot;</span><span class="p">,</span><span class="nx">showScale</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scaleOverride</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">scaleSteps</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">scaleStepWidth</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">scaleStartValue</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">scaleLineColor</span><span class="o">:</span><span class="s2">&quot;rgba(0,0,0,.1)&quot;</span><span class="p">,</span><span class="nx">scaleLineWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">scaleShowLabels</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scaleLabel</span><span class="o">:</span><span class="s2">&quot;&lt;%=value%&gt;&quot;</span><span class="p">,</span><span class="nx">scaleIntegersOnly</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scaleBeginAtZero</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">scaleFontFamily</span><span class="o">:</span><span class="s2">&quot;&#39;Helvetica Neue&#39;, &#39;Helvetica&#39;, &#39;Arial&#39;, sans-serif&quot;</span><span class="p">,</span><span class="nx">scaleFontSize</span><span class="o">:</span><span class="mi">12</span><span class="p">,</span><span class="nx">scaleFontStyle</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">scaleFontColor</span><span class="o">:</span><span class="s2">&quot;#666&quot;</span><span class="p">,</span><span class="nx">responsive</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">maintainAspectRatio</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">showTooltips</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">tooltipEvents</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="s2">&quot;touchstart&quot;</span><span class="p">,</span><span class="s2">&quot;touchmove&quot;</span><span class="p">,</span><span class="s2">&quot;mouseout&quot;</span><span class="p">],</span><span class="nx">tooltipFillColor</span><span class="o">:</span><span class="s2">&quot;rgba(0,0,0,0.8)&quot;</span><span class="p">,</span><span class="nx">tooltipFontFamily</span><span class="o">:</span><span class="s2">&quot;&#39;Helvetica Neue&#39;, &#39;Helvetica&#39;, &#39;Arial&#39;, sans-serif&quot;</span><span class="p">,</span><span class="nx">tooltipFontSize</span><span class="o">:</span><span class="mi">14</span><span class="p">,</span><span class="nx">tooltipFontStyle</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">tooltipFontColor</span><span class="o">:</span><span class="s2">&quot;#fff&quot;</span><span class="p">,</span><span class="nx">tooltipTitleFontFamily</span><span class="o">:</span><span class="s2">&quot;&#39;Helvetica Neue&#39;, &#39;Helvetica&#39;, &#39;Arial&#39;, sans-serif&quot;</span><span class="p">,</span><span class="nx">tooltipTitleFontSize</span><span class="o">:</span><span class="mi">14</span><span class="p">,</span><span class="nx">tooltipTitleFontStyle</span><span class="o">:</span><span class="s2">&quot;bold&quot;</span><span class="p">,</span><span class="nx">tooltipTitleFontColor</span><span class="o">:</span><span class="s2">&quot;#fff&quot;</span><span class="p">,</span><span class="nx">tooltipYPadding</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">tooltipXPadding</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">tooltipCaretSize</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="nx">tooltipCornerRadius</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">tooltipXOffset</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">tooltipTemplate</span><span class="o">:</span><span class="s2">&quot;&lt;%if (label){%&gt;&lt;%=label%&gt;: &lt;%}%&gt;&lt;%= value %&gt;&quot;</span><span class="p">,</span><span class="nx">multiTooltipTemplate</span><span class="o">:</span><span class="s2">&quot;&lt;%= value %&gt;&quot;</span><span class="p">,</span><span class="nx">multiTooltipKeyBackground</span><span class="o">:</span><span class="s2">&quot;#fff&quot;</span><span class="p">,</span><span class="nx">onAnimationProgress</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">onAnimationComplete</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}},</span><span class="nx">e</span><span class="p">.</span><span class="nx">types</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">helpers</span><span class="o">=</span><span class="p">{},</span><span class="nx">n</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">each</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">3</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">===+</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">i</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">,[</span><span class="nx">t</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">n</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">s</span><span class="p">))}</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span> <span class="k">in</span> <span class="nx">t</span><span class="p">)</span><span class="nx">i</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">,[</span><span class="nx">t</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">o</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">s</span><span class="p">))},</span><span class="nx">o</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">n</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">)}),</span><span class="nx">i</span><span class="p">},</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">n</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">n</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">)})}),</span><span class="nx">t</span><span class="p">},</span><span class="nx">h</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">merge</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">unshift</span><span class="p">({}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">t</span><span class="p">)},</span><span class="nx">l</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">)</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">===</span><span class="nx">i</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">where</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">)}),</span><span class="nx">e</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">findNextWhere</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=-</span><span class="mi">1</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">s</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">s</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">))</span><span class="k">return</span> <span class="nx">n</span><span class="p">}},</span><span class="nx">s</span><span class="p">.</span><span class="nx">findPreviousWhere</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">s</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">s</span><span class="o">--</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">))</span><span class="k">return</span> <span class="nx">n</span><span class="p">}},</span><span class="nx">s</span><span class="p">.</span><span class="nx">inherits</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&quot;constructor&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">constructor</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)},</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="nx">e</span><span class="p">};</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">s</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">__super__</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">e</span><span class="p">}),</span><span class="nx">c</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">noop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">u</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">uid</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;chart-&quot;</span><span class="o">+</span><span class="nx">t</span><span class="o">++</span><span class="p">}}(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">warn</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">warn</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="nx">t</span><span class="p">)},</span><span class="nx">p</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">amd</span><span class="o">=</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">t</span><span class="p">.</span><span class="nx">define</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">define</span><span class="p">.</span><span class="nx">amd</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">isNumber</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">t</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">t</span><span class="p">)},</span><span class="nx">g</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nb">Math</span><span class="p">,</span><span class="nx">t</span><span class="p">)},</span><span class="nx">m</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nb">Math</span><span class="p">,</span><span class="nx">t</span><span class="p">)},</span><span class="nx">v</span><span class="o">=</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">cap</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="nx">i</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">)</span><span class="k">return</span> <span class="nx">i</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">getDecimalPlaces</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">%</span><span class="mi">1</span><span class="o">!==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">:</span><span class="mi">0</span><span class="p">}),</span><span class="nx">x</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">radians</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">*</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="p">)},</span><span class="nx">S</span><span class="o">=</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">getAngleFromPoint</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">s</span><span class="o">*</span><span class="nx">s</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">atan2</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="mi">0</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="o">+=</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">),{</span><span class="nx">angle</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="nx">distance</span><span class="o">:</span><span class="nx">n</span><span class="p">}},</span><span class="nx">s</span><span class="p">.</span><span class="nx">aliasPixel</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">%</span><span class="mi">2</span><span class="o">===</span><span class="mi">0</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="p">.</span><span class="mi">5</span><span class="p">}),</span><span class="nx">y</span><span class="o">=</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">splineCurve</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">o</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">i</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">i</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="o">*</span><span class="nx">n</span><span class="o">/</span><span class="p">(</span><span class="nx">n</span><span class="o">+</span><span class="nx">o</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">s</span><span class="o">*</span><span class="nx">o</span><span class="o">/</span><span class="p">(</span><span class="nx">n</span><span class="o">+</span><span class="nx">o</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">inner</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">a</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">a</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">)},</span><span class="nx">outer</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">)}}},</span><span class="nx">s</span><span class="p">.</span><span class="nx">calculateOrderOfMagnitude</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">LN10</span><span class="p">)}),</span><span class="nx">C</span><span class="o">=</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">calculateScaleRange</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">i</span><span class="o">/</span><span class="p">(</span><span class="mf">1.5</span><span class="o">*</span><span class="nx">e</span><span class="p">)),</span><span class="nx">h</span><span class="o">=</span><span class="nx">o</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="nx">l</span><span class="o">===</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">+=</span><span class="p">.</span><span class="mi">5</span><span class="p">,</span><span class="nx">r</span><span class="o">&gt;=</span><span class="p">.</span><span class="mi">5</span><span class="o">&amp;&amp;!</span><span class="nx">s</span><span class="o">?</span><span class="nx">r</span><span class="o">-=</span><span class="p">.</span><span class="mi">5</span><span class="o">:</span><span class="nx">l</span><span class="o">+=</span><span class="p">.</span><span class="mi">5</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">l</span><span class="o">-</span><span class="nx">r</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">l</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">u</span><span class="p">)))</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">u</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">s</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">r</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">u</span><span class="p">)))</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">u</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="nx">p</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">u</span><span class="p">),</span><span class="nx">x</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">f</span><span class="o">/</span><span class="nx">v</span><span class="p">);(</span><span class="nx">x</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">*</span><span class="nx">x</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">h</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">)</span><span class="nx">v</span><span class="o">*=</span><span class="mi">2</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">f</span><span class="o">/</span><span class="nx">v</span><span class="p">),</span><span class="nx">x</span><span class="o">%</span><span class="mi">1</span><span class="o">!==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="o">/</span><span class="mi">2</span><span class="o">%</span><span class="mi">1</span><span class="o">!==</span><span class="mi">0</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="nx">v</span><span class="o">/=</span><span class="mi">2</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">f</span><span class="o">/</span><span class="nx">v</span><span class="p">)}</span><span class="k">else</span> <span class="nx">v</span><span class="o">/=</span><span class="mi">2</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">f</span><span class="o">/</span><span class="nx">v</span><span class="p">);</span><span class="k">return</span> <span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">x</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">f</span><span class="o">/</span><span class="nx">x</span><span class="p">),{</span><span class="nx">steps</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">stepValue</span><span class="o">:</span><span class="nx">v</span><span class="p">,</span><span class="nx">min</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="nx">p</span><span class="o">+</span><span class="nx">x</span><span class="o">*</span><span class="nx">v</span><span class="p">}},</span><span class="nx">s</span><span class="p">.</span><span class="nx">template</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="sr">/\W/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">?</span><span class="k">new</span> <span class="nb">Function</span><span class="p">(</span><span class="s2">&quot;obj&quot;</span><span class="p">,</span><span class="s2">&quot;var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push(&#39;&quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\r\t\n]/g</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&lt;%&quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;	&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/((^|%&gt;)[^\t]*)&#39;/g</span><span class="p">,</span><span class="s2">&quot;$1\r&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\t=(.*?)%&gt;/g</span><span class="p">,</span><span class="s2">&quot;&#39;,$1,&#39;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;	&quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&#39;);&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;%&gt;&quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;p.push(&#39;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;\r&quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;\\&#39;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&#39;);}return p.join(&#39;&#39;);&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="k">return</span> <span class="nx">i</span><span class="o">?</span><span class="nx">e</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span> <span class="k">instanceof</span> <span class="nb">Function</span><span class="p">)</span><span class="k">return</span> <span class="nx">t</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">)}),</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">generateLabels</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="k">return</span> <span class="nx">labelTemplateString</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="nx">o</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">C</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">value</span><span class="o">:</span><span class="nx">e</span><span class="o">+</span><span class="nx">s</span><span class="o">*</span><span class="p">(</span><span class="nx">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)})}),</span><span class="nx">o</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">easingEffects</span><span class="o">=</span><span class="p">{</span><span class="nx">linear</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">},</span><span class="nx">easeInQuad</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="p">},</span><span class="nx">easeOutQuad</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="mi">2</span><span class="p">)},</span><span class="nx">easeInOutQuad</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="p">.</span><span class="mi">5</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">?</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">:-</span><span class="mf">0.5</span><span class="o">*</span><span class="p">(</span><span class="o">--</span><span class="nx">t</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">easeInCubic</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="p">},</span><span class="nx">easeOutCubic</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="mi">1</span><span class="o">*</span><span class="p">((</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="o">/</span><span class="mi">1</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="mi">1</span><span class="p">)},</span><span class="nx">easeInOutCubic</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="p">.</span><span class="mi">5</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">?</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">:</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="p">((</span><span class="nx">t</span><span class="o">-=</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="mi">2</span><span class="p">)},</span><span class="nx">easeInQuart</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="p">},</span><span class="nx">easeOutQuart</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="o">*</span><span class="p">((</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="o">/</span><span class="mi">1</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">easeInOutQuart</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="p">.</span><span class="mi">5</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">?</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">:-</span><span class="mf">0.5</span><span class="o">*</span><span class="p">((</span><span class="nx">t</span><span class="o">-=</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="mi">2</span><span class="p">)},</span><span class="nx">easeInQuint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="mi">1</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="p">},</span><span class="nx">easeOutQuint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="mi">1</span><span class="o">*</span><span class="p">((</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="o">/</span><span class="mi">1</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="mi">1</span><span class="p">)},</span><span class="nx">easeInOutQuint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="p">.</span><span class="mi">5</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">?</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">:</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="p">((</span><span class="nx">t</span><span class="o">-=</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="mi">2</span><span class="p">)},</span><span class="nx">easeInSine</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">t</span><span class="o">/</span><span class="mi">1</span><span class="o">*</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="p">))</span><span class="o">+</span><span class="mi">1</span><span class="p">},</span><span class="nx">easeOutSine</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="mi">1</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">t</span><span class="o">/</span><span class="mi">1</span><span class="o">*</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="p">))},</span><span class="nx">easeInOutSine</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="o">-</span><span class="mf">0.5</span><span class="o">*</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">*</span><span class="nx">t</span><span class="o">/</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">easeInExpo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">10</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">/</span><span class="mi">1</span><span class="o">-</span><span class="mi">1</span><span class="p">))},</span><span class="nx">easeOutExpo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="mi">1</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="o">*</span><span class="p">(</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">10</span><span class="o">*</span><span class="nx">t</span><span class="o">/</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)},</span><span class="nx">easeInOutExpo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="p">.</span><span class="mi">5</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">?</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">10</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="p">(</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">10</span><span class="o">*--</span><span class="nx">t</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="p">)},</span><span class="nx">easeInCirc</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">&gt;=</span><span class="mi">1</span><span class="o">?</span><span class="nx">t</span><span class="o">:-</span><span class="mi">1</span><span class="o">*</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">easeOutCirc</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="mi">1</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="o">/</span><span class="mi">1</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="p">)},</span><span class="nx">easeInOutCirc</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="p">.</span><span class="mi">5</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">?-</span><span class="mf">0.5</span><span class="o">*</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="p">(</span><span class="nx">t</span><span class="o">-=</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)},</span><span class="nx">easeInElastic</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mf">1.70158</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="o">==</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">.</span><span class="mi">3</span><span class="p">),</span><span class="nx">s</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="o">/</span><span class="mi">4</span><span class="p">)</span><span class="o">:</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">asin</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="nx">s</span><span class="p">),</span><span class="o">-</span><span class="p">(</span><span class="nx">s</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">10</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-=</span><span class="mi">1</span><span class="p">))</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">i</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="nx">e</span><span class="p">)))},</span><span class="nx">easeOutElastic</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mf">1.70158</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="o">==</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">.</span><span class="mi">3</span><span class="p">),</span><span class="nx">s</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="o">/</span><span class="mi">4</span><span class="p">)</span><span class="o">:</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">asin</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="nx">s</span><span class="p">),</span><span class="nx">s</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">10</span><span class="o">*</span><span class="nx">t</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">i</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="nx">e</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)},</span><span class="nx">easeInOutElastic</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mf">1.70158</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">2</span><span class="o">==</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="p">.</span><span class="mi">5</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">.</span><span class="mi">3</span><span class="o">*</span><span class="mf">1.5</span><span class="p">),</span><span class="nx">s</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="o">/</span><span class="mi">4</span><span class="p">)</span><span class="o">:</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">asin</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="nx">s</span><span class="p">),</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">t</span><span class="o">?-</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="nx">s</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">10</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-=</span><span class="mi">1</span><span class="p">))</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">i</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">10</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-=</span><span class="mi">1</span><span class="p">))</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">i</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="nx">e</span><span class="p">)</span><span class="o">*</span><span class="p">.</span><span class="mi">5</span><span class="o">+</span><span class="mi">1</span><span class="p">)},</span><span class="nx">easeInBack</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mf">1.70158</span><span class="p">;</span><span class="k">return</span> <span class="mi">1</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="p">((</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">i</span><span class="p">)},</span><span class="nx">easeOutBack</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mf">1.70158</span><span class="p">;</span><span class="k">return</span> <span class="mi">1</span><span class="o">*</span><span class="p">((</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="o">/</span><span class="mi">1</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="p">((</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="nx">i</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)},</span><span class="nx">easeInOutBack</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mf">1.70158</span><span class="p">;</span><span class="k">return</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="p">.</span><span class="mi">5</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">?</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="p">(((</span><span class="nx">i</span><span class="o">*=</span><span class="mf">1.525</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">i</span><span class="p">)</span><span class="o">:</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="p">((</span><span class="nx">t</span><span class="o">-=</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="p">(((</span><span class="nx">i</span><span class="o">*=</span><span class="mf">1.525</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="nx">i</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="p">)},</span><span class="nx">easeInBounce</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">easeOutBounce</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">t</span><span class="p">)},</span><span class="nx">easeOutBounce</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">t</span><span class="o">/=</span><span class="mi">1</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">/</span><span class="mf">2.75</span><span class="o">?</span><span class="mf">7.5625</span><span class="o">*</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="o">:</span><span class="mi">2</span><span class="o">/</span><span class="mf">2.75</span><span class="o">&gt;</span><span class="nx">t</span><span class="o">?</span><span class="mi">1</span><span class="o">*</span><span class="p">(</span><span class="mf">7.5625</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-=</span><span class="mf">1.5</span><span class="o">/</span><span class="mf">2.75</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="p">.</span><span class="mi">75</span><span class="p">)</span><span class="o">:</span><span class="mf">2.5</span><span class="o">/</span><span class="mf">2.75</span><span class="o">&gt;</span><span class="nx">t</span><span class="o">?</span><span class="mi">1</span><span class="o">*</span><span class="p">(</span><span class="mf">7.5625</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-=</span><span class="mf">2.25</span><span class="o">/</span><span class="mf">2.75</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="p">.</span><span class="mi">9375</span><span class="p">)</span><span class="o">:</span><span class="mi">1</span><span class="o">*</span><span class="p">(</span><span class="mf">7.5625</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-=</span><span class="mf">2.625</span><span class="o">/</span><span class="mf">2.75</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="p">.</span><span class="mi">984375</span><span class="p">)},</span><span class="nx">easeInOutBounce</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="p">.</span><span class="mi">5</span><span class="o">&gt;</span><span class="nx">t</span><span class="o">?</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="nx">b</span><span class="p">.</span><span class="nx">easeInBounce</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="nx">b</span><span class="p">.</span><span class="nx">easeOutBounce</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="p">.</span><span class="mi">5</span><span class="p">}}),</span><span class="nx">w</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">requestAnimFrame</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">window</span><span class="p">.</span><span class="nx">requestAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">webkitRequestAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">mozRequestAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">oRequestAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">msRequestAnimationFrame</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nb">window</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="mi">1</span><span class="nx">e3</span><span class="o">/</span><span class="mi">60</span><span class="p">)}}(),</span><span class="nx">P</span><span class="o">=</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">cancelAnimFrame</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">window</span><span class="p">.</span><span class="nx">cancelAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">webkitCancelAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">mozCancelAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">oCancelAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">msCancelAnimationFrame</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nb">window</span><span class="p">.</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="mi">1</span><span class="nx">e3</span><span class="o">/</span><span class="mi">60</span><span class="p">)}}(),</span><span class="nx">s</span><span class="p">.</span><span class="nx">animationLoop</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">linear</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="o">++</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="nx">i</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">animationFrame</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">o</span><span class="p">)};</span><span class="nx">w</span><span class="p">(</span><span class="nx">l</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">getRelativePosition</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">originalEvent</span><span class="o">||</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">currentTarget</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">();</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">touches</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">touches</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">clientX</span><span class="o">-</span><span class="nx">o</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">touches</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">clientY</span><span class="o">-</span><span class="nx">o</span><span class="p">.</span><span class="nx">top</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">clientX</span><span class="o">-</span><span class="nx">o</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">clientY</span><span class="o">-</span><span class="nx">o</span><span class="p">.</span><span class="nx">top</span><span class="p">),{</span><span class="nx">x</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">e</span><span class="p">}},</span><span class="nx">s</span><span class="p">.</span><span class="nx">addEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">t</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">}),</span><span class="nx">L</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">removeEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">detachEvent</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">t</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">},</span><span class="nx">k</span><span class="o">=</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">bindEvents</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">events</span><span class="o">||</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">events</span><span class="o">=</span><span class="p">{}),</span><span class="nx">n</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)},</span><span class="nx">P</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">canvas</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">i</span><span class="p">])})},</span><span class="nx">s</span><span class="p">.</span><span class="nx">unbindEvents</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">n</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">L</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">canvas</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">)})}),</span><span class="nx">F</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">getMaximumWidth</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">clientWidth</span><span class="p">},</span><span class="nx">R</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">getMaximumHeight</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">},</span><span class="nx">A</span><span class="o">=</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">getMaximumSize</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">getMaximumWidth</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">retinaScale</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nb">window</span><span class="p">.</span><span class="nx">devicePixelRatio</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">s</span><span class="o">*</span><span class="nb">window</span><span class="p">.</span><span class="nx">devicePixelRatio</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">e</span><span class="o">*</span><span class="nb">window</span><span class="p">.</span><span class="nx">devicePixelRatio</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">devicePixelRatio</span><span class="p">,</span><span class="nb">window</span><span class="p">.</span><span class="nx">devicePixelRatio</span><span class="p">))}),</span><span class="nx">T</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">clearRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">height</span><span class="p">)},</span><span class="nx">M</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">fontString</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot;px &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">},</span><span class="nx">W</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">longestText</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">n</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">width</span><span class="p">;</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">s</span><span class="p">}),</span><span class="nx">s</span><span class="p">},</span><span class="nx">z</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">drawRoundedRectangle</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="nx">o</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="nx">s</span><span class="o">-</span><span class="nx">o</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="nx">s</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="o">+</span><span class="nx">s</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="nx">o</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="nx">s</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="nx">n</span><span class="o">-</span><span class="nx">o</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="nx">s</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="o">+</span><span class="nx">s</span><span class="o">-</span><span class="nx">o</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="nx">o</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="nx">n</span><span class="o">-</span><span class="nx">o</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="nx">o</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="o">+</span><span class="nx">o</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">closePath</span><span class="p">()};</span><span class="nx">e</span><span class="p">.</span><span class="nx">instances</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="p">.</span><span class="nx">Type</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">u</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">instances</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">responsive</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">resize</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">)},</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">Type</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,{</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">clear</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">stop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">cancelAnimFrame</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">animationFrame</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">resize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">stop</span><span class="p">();</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">canvas</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">canvas</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">maintainAspectRatio</span><span class="o">?</span><span class="nx">e</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">aspectRatio</span><span class="o">:</span><span class="nx">R</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">canvas</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">),</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">)),</span><span class="k">this</span><span class="p">},</span><span class="nx">reflow</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">render</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">reflow</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animation</span><span class="o">&amp;&amp;!</span><span class="nx">t</span><span class="o">?</span><span class="nx">s</span><span class="p">.</span><span class="nx">animationLoop</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">draw</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animationSteps</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animationEasing</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">onAnimationProgress</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">onAnimationComplete</span><span class="p">,</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">draw</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">onAnimationComplete</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)),</span><span class="k">this</span><span class="p">},</span><span class="nx">generateLegend</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">legendTemplate</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">clear</span><span class="p">(),</span><span class="nx">k</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">),</span><span class="k">delete</span> <span class="nx">e</span><span class="p">.</span><span class="nx">instances</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]},</span><span class="nx">showTooltip</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">activeElements</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">activeElements</span><span class="o">=</span><span class="p">[]);</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">activeElements</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">i</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">t</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">activeElements</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=!</span><span class="mi">0</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="nx">i</span><span class="p">)}.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">||</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">activeElements</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">draw</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">r</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">points</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">bars</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">segments</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">h</span><span class="p">);</span><span class="nx">r</span><span class="o">--</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">u</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">l</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">t</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">points</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">bars</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">segments</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">hasValue</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">h</span><span class="p">])}),</span><span class="nx">s</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">r</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">multiTooltipTemplate</span><span class="p">,</span><span class="nx">t</span><span class="p">)),</span><span class="nx">u</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">fill</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">_saved</span><span class="p">.</span><span class="nx">fillColor</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">_saved</span><span class="p">.</span><span class="nx">strokeColor</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeColor</span><span class="p">})},</span><span class="k">this</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">l</span><span class="p">),{</span><span class="nx">x</span><span class="o">:</span><span class="nx">n</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="p">(</span><span class="nx">o</span><span class="o">+</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">}}.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">new</span> <span class="nx">e</span><span class="p">.</span><span class="nx">MultiTooltip</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">xPadding</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipXPadding</span><span class="p">,</span><span class="nx">yPadding</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipYPadding</span><span class="p">,</span><span class="nx">xOffset</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipXOffset</span><span class="p">,</span><span class="nx">fillColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipFillColor</span><span class="p">,</span><span class="nx">textColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipFontColor</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipFontFamily</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipFontStyle</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipFontSize</span><span class="p">,</span><span class="nx">titleTextColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipTitleFontColor</span><span class="p">,</span><span class="nx">titleFontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipTitleFontFamily</span><span class="p">,</span><span class="nx">titleFontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipTitleFontStyle</span><span class="p">,</span><span class="nx">titleFontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipTitleFontSize</span><span class="p">,</span><span class="nx">cornerRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipCornerRadius</span><span class="p">,</span><span class="nx">labels</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">legendColors</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">legendColorBackground</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">multiTooltipKeyBackground</span><span class="p">,</span><span class="nx">title</span><span class="o">:</span><span class="nx">t</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">label</span><span class="p">,</span><span class="nx">chart</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">}).</span><span class="nx">draw</span><span class="p">()}</span><span class="k">else</span> <span class="nx">n</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">tooltipPosition</span><span class="p">();</span><span class="k">new</span> <span class="nx">e</span><span class="p">.</span><span class="nx">Tooltip</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">xPadding</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipXPadding</span><span class="p">,</span><span class="nx">yPadding</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipYPadding</span><span class="p">,</span><span class="nx">fillColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipFillColor</span><span class="p">,</span><span class="nx">textColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipFontColor</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipFontFamily</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipFontStyle</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipFontSize</span><span class="p">,</span><span class="nx">caretHeight</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipCaretSize</span><span class="p">,</span><span class="nx">cornerRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipCornerRadius</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="nx">C</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipTemplate</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">chart</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">}).</span><span class="nx">draw</span><span class="p">()},</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">}},</span><span class="nx">toBase64Image</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">toDataURL</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">canvas</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">Type</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">prototype</span><span class="p">),</span><span class="nx">a</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">Type</span><span class="p">.</span><span class="nx">extend</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">name</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">name</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">defaults</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">?</span><span class="nx">o</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">defaults</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="p">])</span><span class="o">:</span><span class="p">{};</span><span class="nx">e</span><span class="p">.</span><span class="nx">defaults</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">defaults</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">types</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">defaults</span><span class="p">.</span><span class="nx">global</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">defaults</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">i</span><span class="o">||</span><span class="p">{});</span><span class="k">return</span> <span class="k">new</span> <span class="nx">s</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="k">this</span><span class="p">)}}</span><span class="k">else</span> <span class="nx">d</span><span class="p">(</span><span class="s2">&quot;Name not provided for this chart, so it hasn&#39;t been registered&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">Element</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">save</span><span class="p">()},</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,{</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">restore</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">?</span><span class="nx">n</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_saved</span><span class="p">[</span><span class="nx">t</span><span class="p">]},</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_saved</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">save</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_saved</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_saved</span><span class="p">.</span><span class="nx">_saved</span><span class="p">,</span><span class="k">this</span><span class="p">},</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">n</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_saved</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="k">this</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">transition</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">n</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_saved</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">*</span><span class="nx">i</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">_saved</span><span class="p">[</span><span class="nx">e</span><span class="p">]},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">tooltipPosition</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">}},</span><span class="nx">hasValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">)}}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">Element</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">Point</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">Element</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">display</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">inRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">hitDetectionRadius</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">radius</span><span class="p">;</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">i</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">2</span><span class="p">)},</span><span class="nx">draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">display</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">radius</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeWidth</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()}}}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">Arc</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">Element</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">inRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">getAngleFromPoint</span><span class="p">(</span><span class="k">this</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">i</span><span class="p">}),</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">angle</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">angle</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">endAngle</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">distance</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">innerRadius</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">distance</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">outerRadius</span><span class="p">;</span><span class="k">return</span> <span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">},</span><span class="nx">tooltipPosition</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">endAngle</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">startAngle</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">outerRadius</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">innerRadius</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">innerRadius</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">*</span><span class="nx">i</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">*</span><span class="nx">i</span><span class="p">}},</span><span class="nx">draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="nx">i</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">i</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">outerRadius</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startAngle</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endAngle</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">innerRadius</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endAngle</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startAngle</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">i</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeColor</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeWidth</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">i</span><span class="p">.</span><span class="nx">lineJoin</span><span class="o">=</span><span class="s2">&quot;bevel&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">showStroke</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()}}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">Rectangle</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">Element</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="o">-</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeWidth</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">showStroke</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">+=</span><span class="nx">o</span><span class="p">,</span><span class="nx">s</span><span class="o">-=</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="o">+=</span><span class="nx">o</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeWidth</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">showStroke</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()},</span><span class="nx">height</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">},</span><span class="nx">inRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">}}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">Tooltip</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">Element</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontStyle</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontFamily</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">xAlign</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">yAlign</span><span class="o">=</span><span class="s2">&quot;above&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="p">).</span><span class="nx">width</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">xPadding</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">yPadding</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">s</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">caretHeight</span><span class="o">+</span><span class="nx">i</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">xAlign</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xAlign</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">n</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">yAlign</span><span class="o">=</span><span class="s2">&quot;below&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">n</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">yAlign</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;above&quot;</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">i</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">caretHeight</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">caretHeight</span><span class="p">)),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">caretHeight</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">caretHeight</span><span class="p">)),</span><span class="nx">t</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">fill</span><span class="p">();</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;below&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">caretHeight</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">i</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">caretHeight</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">caretHeight</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">caretHeight</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">caretHeight</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">fill</span><span class="p">()}</span><span class="k">switch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xAlign</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">e</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cornerRadius</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">caretHeight</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cornerRadius</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">caretHeight</span><span class="p">)}</span><span class="nx">z</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cornerRadius</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="s2">&quot;middle&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span><span class="nx">o</span><span class="o">+</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">s</span><span class="o">/</span><span class="mi">2</span><span class="p">)}}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">MultiTooltip</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">Element</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontStyle</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontFamily</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFont</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontStyle</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontFamily</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">.</span><span class="nx">length</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">yPadding</span><span class="o">+</span><span class="mf">1.5</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFont</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="p">).</span><span class="nx">width</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">+</span><span class="mi">3</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">([</span><span class="nx">i</span><span class="p">,</span><span class="nx">t</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">xPadding</span><span class="p">;</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">s</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">s</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">s</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="nx">s</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">-=</span><span class="k">this</span><span class="p">.</span><span class="nx">xOffset</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">xOffset</span><span class="p">},</span><span class="nx">getLineHeight</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">yPadding</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="nx">i</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="o">/</span><span class="mi">2</span><span class="o">:</span><span class="nx">i</span><span class="o">+</span><span class="p">(</span><span class="mf">1.5</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="mf">1.5</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFontSize</span><span class="p">},</span><span class="nx">draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cornerRadius</span><span class="p">);</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="s2">&quot;middle&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">titleTextColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">titleFont</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">xPadding</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getLineHeight</span><span class="p">(</span><span class="mi">0</span><span class="p">)),</span><span class="nx">t</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">xPadding</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">+</span><span class="mi">3</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getLineHeight</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">)),</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">legendColorBackground</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">xPadding</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getLineHeight</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">legendColors</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">fill</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">xPadding</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getLineHeight</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">)},</span><span class="k">this</span><span class="p">)}}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">Scale</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">Element</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">fit</span><span class="p">()},</span><span class="nx">buildYLabels</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">yLabels</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stepValue</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">steps</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">yLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">templateString</span><span class="p">,{</span><span class="nx">value</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">stepValue</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">t</span><span class="p">)}));</span><span class="k">this</span><span class="p">.</span><span class="nx">yLabelWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">display</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">showLabels</span><span class="o">?</span><span class="nx">W</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">yLabels</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">addXLabel</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">valuesCount</span><span class="o">++</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fit</span><span class="p">()},</span><span class="nx">removeXLabel</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabels</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">valuesCount</span><span class="o">--</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fit</span><span class="p">()},</span><span class="nx">fit</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">startPoint</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">display</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">display</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="mf">1.5</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">-</span><span class="mi">5</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startPoint</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">-=</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">startPoint</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateYRange</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">buildYLabels</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateXLabelRotation</span><span class="p">();</span><span class="nx">i</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">startPoint</span><span class="p">;)</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">startPoint</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">yLabelWidth</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateYRange</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">buildYLabels</span><span class="p">(),</span><span class="nx">t</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">yLabelWidth</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateXLabelRotation</span><span class="p">()},</span><span class="nx">calculateXLabelRotation</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabels</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">width</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabels</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabels</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]).</span><span class="nx">width</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xScalePaddingRight</span><span class="o">=</span><span class="nx">s</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">3</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">xScalePaddingLeft</span><span class="o">=</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">yLabelWidth</span><span class="o">+</span><span class="mi">10</span><span class="o">?</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">yLabelWidth</span><span class="o">+</span><span class="mi">10</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelRotation</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">display</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabels</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelWidth</span><span class="o">=</span><span class="nx">o</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateX</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateX</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span><span class="o">-</span><span class="mi">6</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelWidth</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelRotation</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelWidth</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelRotation</span><span class="o">&lt;=</span><span class="mi">90</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelRotation</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">;)</span><span class="nx">n</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelRotation</span><span class="p">)),</span><span class="nx">t</span><span class="o">=</span><span class="nx">n</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="o">*</span><span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">/</span><span class="mi">2</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">yLabelWidth</span><span class="o">+</span><span class="mi">8</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xScalePaddingLeft</span><span class="o">=</span><span class="nx">t</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">xScalePaddingRight</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelRotation</span><span class="o">++</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelWidth</span><span class="o">=</span><span class="nx">n</span><span class="o">*</span><span class="nx">o</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelRotation</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">-=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelRotation</span><span class="p">))</span><span class="o">*</span><span class="nx">o</span><span class="o">+</span><span class="mi">3</span><span class="p">)}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">xLabelWidth</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">xScalePaddingRight</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">xScalePaddingLeft</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">},</span><span class="nx">calculateYRange</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">drawingArea</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">startPoint</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">},</span><span class="nx">calculateY</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">drawingArea</span><span class="p">()</span><span class="o">/</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">-</span><span class="nx">i</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">)},</span><span class="nx">calculateX</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelRotation</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xScalePaddingLeft</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">xScalePaddingRight</span><span class="p">)),</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="o">/</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">valuesCount</span><span class="o">-</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetGridLines</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">)),</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">xScalePaddingLeft</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">offsetGridLines</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">+=</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">s</span><span class="p">)},</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">s</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">fit</span><span class="p">()},</span><span class="nx">draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">startPoint</span><span class="p">)</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">steps</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xScalePaddingLeft</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">display</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="p">,</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">yLabels</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">-</span><span class="nx">i</span><span class="o">*</span><span class="nx">o</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="s2">&quot;middle&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">showLabels</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">o</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">gridLineWidth</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">gridLineColor</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineColor</span><span class="p">),</span><span class="nx">h</span><span class="o">+=</span><span class="nx">s</span><span class="p">.</span><span class="nx">aliasPixel</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">closePath</span><span class="p">()},</span><span class="k">this</span><span class="p">),</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabels</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateX</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">+</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateX</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetGridLines</span><span class="o">?</span><span class="p">.</span><span class="mi">5</span><span class="o">:</span><span class="mi">0</span><span class="p">))</span><span class="o">+</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelRotation</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">gridLineWidth</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">gridLineColor</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineColor</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">startPoint</span><span class="o">-</span><span class="mi">3</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">+</span><span class="mi">5</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">+</span><span class="mi">12</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">+</span><span class="mi">8</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">rotate</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">*</span><span class="nx">x</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xLabelRotation</span><span class="p">)),</span><span class="nx">t</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="nx">o</span><span class="o">?</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="nx">o</span><span class="o">?</span><span class="s2">&quot;middle&quot;</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">restore</span><span class="p">()},</span><span class="k">this</span><span class="p">))}}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">RadialScale</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">Element</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="nx">m</span><span class="p">([</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">]),</span><span class="k">this</span><span class="p">.</span><span class="nx">drawingArea</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">display</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">backdropPaddingY</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="mi">2</span><span class="p">},</span><span class="nx">calculateCenterOffset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">drawingArea</span><span class="o">/</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">);</span><span class="k">return</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">)</span><span class="o">*</span><span class="nx">i</span><span class="p">},</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">lineArc</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">drawingArea</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">display</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">backdropPaddingY</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">size</span><span class="o">/</span><span class="mi">2</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setScaleSize</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">buildYLabels</span><span class="p">()},</span><span class="nx">buildYLabels</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">yLabels</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stepValue</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">steps</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">yLabels</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">templateString</span><span class="p">,{</span><span class="nx">value</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">stepValue</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">t</span><span class="p">)}))},</span><span class="nx">getCircumference</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">valuesCount</span><span class="p">},</span><span class="nx">setScaleSize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">m</span><span class="p">([</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">pointLabelFontSize</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">]),</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pointLabelFontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pointLabelFontStyle</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pointLabelFontFamily</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">valuesCount</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPointPosition</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">templateString</span><span class="p">,{</span><span class="nx">value</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">i</span><span class="p">]})).</span><span class="nx">width</span><span class="o">+</span><span class="mi">5</span><span class="p">,</span><span class="mi">0</span><span class="o">===</span><span class="nx">i</span><span class="o">||</span><span class="nx">i</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">valuesCount</span><span class="o">/</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">s</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">))</span><span class="o">:</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">valuesCount</span><span class="o">/</span><span class="mi">2</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">)</span><span class="o">:</span><span class="nx">i</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">valuesCount</span><span class="o">/</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">p</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getIndexAngle</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getIndexAngle</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">r</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">o</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="nx">l</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">h</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span><span class="o">?</span><span class="nx">u</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">drawingArea</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="p">(</span><span class="nx">u</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">setCenterPoint</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">setCenterPoint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">i</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">drawingArea</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">drawingArea</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">xCenter</span><span class="o">=</span><span class="p">(</span><span class="nx">s</span><span class="o">+</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">yCenter</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">},</span><span class="nx">getIndexAngle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">valuesCount</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="o">*</span><span class="nx">i</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="p">},</span><span class="nx">getPointPosition</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getIndexAngle</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">*</span><span class="nx">i</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">xCenter</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">*</span><span class="nx">i</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">yCenter</span><span class="p">}},</span><span class="nx">draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">display</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">yLabels</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="o">*</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">drawingArea</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">steps</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">yCenter</span><span class="o">-</span><span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">lineArc</span><span class="p">)</span><span class="nx">t</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xCenter</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">yCenter</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">stroke</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="nx">t</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">valuesCount</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPointPosition</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateCenterOffset</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">stepValue</span><span class="p">)),</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">showLabels</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontStyle</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontFamily</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">showLabelBackdrop</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">width</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">backdropColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xCenter</span><span class="o">-</span><span class="nx">h</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">backdropPaddingX</span><span class="p">,</span><span class="nx">o</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">backdropPaddingY</span><span class="p">,</span><span class="nx">h</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">backdropPaddingX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">backdropPaddingY</span><span class="p">)}</span><span class="nx">t</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="s2">&quot;middle&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">fontColor</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">xCenter</span><span class="p">,</span><span class="nx">o</span><span class="p">)}}},</span><span class="k">this</span><span class="p">),</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">lineArc</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">angleLineWidth</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">angleLineColor</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">valuesCount</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">angleLineWidth</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPointPosition</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateCenterOffset</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">));</span><span class="nx">t</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xCenter</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">yCenter</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">closePath</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPointPosition</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateCenterOffset</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">+</span><span class="mi">5</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pointLabelFontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pointLabelFontStyle</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pointLabelFontFamily</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pointLabelFontColor</span><span class="p">;</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">i</span><span class="o">||</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">o</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">i</span><span class="o">===</span><span class="nx">h</span><span class="o">||</span><span class="nx">i</span><span class="o">===</span><span class="nx">o</span><span class="o">-</span><span class="nx">h</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="nx">i</span><span class="o">?</span><span class="s2">&quot;center&quot;</span><span class="o">:</span><span class="nx">i</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;center&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">i</span><span class="o">?</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="nx">r</span><span class="o">?</span><span class="s2">&quot;middle&quot;</span><span class="o">:</span><span class="nx">l</span><span class="o">?</span><span class="s2">&quot;bottom&quot;</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">s</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">y</span><span class="p">)}}}}}),</span><span class="nx">s</span><span class="p">.</span><span class="nx">addEvent</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">t</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">n</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">instances</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">responsive</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">resize</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">render</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)})},</span><span class="mi">50</span><span class="p">)}}()),</span><span class="nx">p</span><span class="o">?</span><span class="nx">define</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">e</span><span class="p">})</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">module</span><span class="o">&amp;&amp;</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="nx">e</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">Chart</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">noConflict</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">Chart</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">}}).</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">Chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">helpers</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">scaleBeginAtZero</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scaleShowGridLines</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scaleGridLineColor</span><span class="o">:</span><span class="s2">&quot;rgba(0,0,0,.05)&quot;</span><span class="p">,</span><span class="nx">scaleGridLineWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">barShowStroke</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">barStrokeWidth</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">barValueSpacing</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">barDatasetSpacing</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">legendTemplate</span><span class="o">:</span><span class="s1">&#39;&lt;ul class=&quot;&lt;%=name.toLowerCase()%&gt;-legend&quot;&gt;&lt;% for (var i=0; i&lt;datasets.length; i++){%&gt;&lt;li&gt;&lt;span style=&quot;background-color:&lt;%=datasets[i].fillColor%&gt;&quot;&gt;&lt;/span&gt;&lt;%if(datasets[i].label){%&gt;&lt;%=datasets[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;&#39;</span><span class="p">};</span><span class="nx">i</span><span class="p">.</span><span class="nx">Type</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;Bar&quot;</span><span class="p">,</span><span class="nx">defaults</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ScaleClass</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">Scale</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">offsetGridLines</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">calculateBarX</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateBaseWidth</span><span class="p">(),</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateX</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">-</span><span class="nx">n</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateBarWidth</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">return</span> <span class="nx">o</span><span class="o">+</span><span class="nx">a</span><span class="o">*</span><span class="nx">i</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">s</span><span class="p">.</span><span class="nx">barDatasetSpacing</span><span class="o">+</span><span class="nx">a</span><span class="o">/</span><span class="mi">2</span><span class="p">},</span><span class="nx">calculateBaseWidth</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">calculateX</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateX</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">s</span><span class="p">.</span><span class="nx">barValueSpacing</span><span class="p">},</span><span class="nx">calculateBarWidth</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateBaseWidth</span><span class="p">()</span><span class="o">-</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">s</span><span class="p">.</span><span class="nx">barDatasetSpacing</span><span class="p">;</span><span class="k">return</span> <span class="nx">i</span><span class="o">/</span><span class="nx">t</span><span class="p">}}),</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showTooltips</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">bindEvents</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipEvents</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="s2">&quot;mouseout&quot;</span><span class="o">!==</span><span class="nx">t</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getBarsAtEvent</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">eachBars</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">restore</span><span class="p">([</span><span class="s2">&quot;fillColor&quot;</span><span class="p">,</span><span class="s2">&quot;strokeColor&quot;</span><span class="p">])}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillColor</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">highlightFill</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeColor</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">highlightStroke</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">showTooltip</span><span class="p">(</span><span class="nx">i</span><span class="p">)}),</span><span class="k">this</span><span class="p">.</span><span class="nx">BarClass</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">Rectangle</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">strokeWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">barStrokeWidth</span><span class="p">,</span><span class="nx">showStroke</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">barShowStroke</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">label</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">label</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">fillColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">strokeColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">strokeColor</span><span class="p">,</span><span class="nx">bars</span><span class="o">:</span><span class="p">[]};</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="nx">s</span><span class="p">.</span><span class="nx">bars</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">BarClass</span><span class="p">({</span><span class="nx">value</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">label</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">datasetLabel</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">label</span><span class="p">,</span><span class="nx">strokeColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">strokeColor</span><span class="p">,</span><span class="nx">fillColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">highlightFill</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">highlightFill</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">highlightStroke</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">highlightStroke</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">strokeColor</span><span class="p">}))},</span><span class="k">this</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">buildScale</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">labels</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">BarClass</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">base</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">eachBars</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateBarWidth</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateBarX</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">}),</span><span class="nx">t</span><span class="p">.</span><span class="nx">save</span><span class="p">()},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">()},</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">update</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">activeElements</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">restore</span><span class="p">([</span><span class="s2">&quot;fillColor&quot;</span><span class="p">,</span><span class="s2">&quot;strokeColor&quot;</span><span class="p">])}),</span><span class="k">this</span><span class="p">.</span><span class="nx">eachBars</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">save</span><span class="p">()}),</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">()},</span><span class="nx">eachBars</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">bars</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="p">)},</span><span class="k">this</span><span class="p">)},</span><span class="nx">getBarsAtEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="p">[],</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getRelativePosition</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">s</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">bars</span><span class="p">[</span><span class="nx">i</span><span class="p">])},</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">bars</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">bars</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">inRange</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">y</span><span class="p">))</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="nx">o</span><span class="p">),</span><span class="nx">s</span><span class="p">;</span><span class="k">return</span> <span class="nx">s</span><span class="p">},</span><span class="nx">buildScale</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">eachBars</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">value</span><span class="p">)}),</span><span class="nx">t</span><span class="p">},</span><span class="nx">n</span><span class="o">=</span><span class="p">{</span><span class="nx">templateString</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleLabel</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">textColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontColor</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontSize</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontStyle</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontFamily</span><span class="p">,</span><span class="nx">valuesCount</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">beginAtZero</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleBeginAtZero</span><span class="p">,</span><span class="nx">integersOnly</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleIntegersOnly</span><span class="p">,</span><span class="nx">calculateYRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">calculateScaleRange</span><span class="p">(</span><span class="nx">s</span><span class="p">(),</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">beginAtZero</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">integersOnly</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="p">)},</span><span class="nx">xLabels</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">font</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontString</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontStyle</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontFamily</span><span class="p">),</span><span class="nx">lineWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleLineWidth</span><span class="p">,</span><span class="nx">lineColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleLineColor</span><span class="p">,</span><span class="nx">gridLineWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleShowGridLines</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleGridLineWidth</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">gridLineColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleShowGridLines</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleGridLineColor</span><span class="o">:</span><span class="s2">&quot;rgba(0,0,0,0)&quot;</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showScale</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">barShowStroke</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">barStrokeWidth</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">showLabels</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleShowLabels</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showScale</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleOverride</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">n</span><span class="p">,{</span><span class="nx">calculateYRange</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">steps</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleSteps</span><span class="p">,</span><span class="nx">stepValue</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStepWidth</span><span class="p">,</span><span class="nx">min</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStartValue</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStartValue</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleSteps</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStepWidth</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">ScaleClass</span><span class="p">(</span><span class="nx">n</span><span class="p">)},</span><span class="nx">addData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">bars</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">BarClass</span><span class="p">({</span><span class="nx">value</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">label</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateBarX</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">valuesCount</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateBarWidth</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">base</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">,</span><span class="nx">strokeColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">strokeColor</span><span class="p">,</span><span class="nx">fillColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">fillColor</span><span class="p">}))},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">addXLabel</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">()},</span><span class="nx">removeData</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">removeXLabel</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">bars</span><span class="p">.</span><span class="nx">shift</span><span class="p">()},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">()},</span><span class="nx">reflow</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">BarClass</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,{</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">,</span><span class="nx">base</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">});</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">t</span><span class="p">)},</span><span class="nx">draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">draw</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">bars</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">hasValue</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">base</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">transition</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateBarX</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateY</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">),</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateBarWidth</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">.</span><span class="nx">length</span><span class="p">)},</span><span class="nx">i</span><span class="p">).</span><span class="nx">draw</span><span class="p">())},</span><span class="k">this</span><span class="p">)},</span><span class="k">this</span><span class="p">)}})}.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">Chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">helpers</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">segmentShowStroke</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">segmentStrokeColor</span><span class="o">:</span><span class="s2">&quot;#fff&quot;</span><span class="p">,</span><span class="nx">segmentStrokeWidth</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">percentageInnerCutout</span><span class="o">:</span><span class="mi">50</span><span class="p">,</span><span class="nx">animationSteps</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">animationEasing</span><span class="o">:</span><span class="s2">&quot;easeOutBounce&quot;</span><span class="p">,</span><span class="nx">animateRotate</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">animateScale</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">legendTemplate</span><span class="o">:</span><span class="s1">&#39;&lt;ul class=&quot;&lt;%=name.toLowerCase()%&gt;-legend&quot;&gt;&lt;% for (var i=0; i&lt;segments.length; i++){%&gt;&lt;li&gt;&lt;span style=&quot;background-color:&lt;%=segments[i].fillColor%&gt;&quot;&gt;&lt;/span&gt;&lt;%if(segments[i].label){%&gt;&lt;%=segments[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;&#39;</span><span class="p">};</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-line-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-line-code js-file-line"><span class="nx">i</span><span class="p">.</span><span class="nx">Type</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;Doughnut&quot;</span><span class="p">,</span><span class="nx">defaults</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">outerRadius</span><span class="o">=</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">min</span><span class="p">([</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">])</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">segmentStrokeWidth</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">SegmentArc</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">Arc</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">ctx</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showTooltips</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">bindEvents</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipEvents</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="s2">&quot;mouseout&quot;</span><span class="o">!==</span><span class="nx">t</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getSegmentsAtEvent</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="p">[];</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">restore</span><span class="p">([</span><span class="s2">&quot;fillColor&quot;</span><span class="p">])}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillColor</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">highlightColor</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">showTooltip</span><span class="p">(</span><span class="nx">i</span><span class="p">)}),</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateTotal</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addData</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">()},</span><span class="nx">getSegmentsAtEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">[],</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getRelativePosition</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">inRange</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="nx">i</span><span class="p">},</span><span class="nx">addData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">i</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">SegmentArc</span><span class="p">({</span><span class="nx">value</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">outerRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animateScale</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">outerRadius</span><span class="p">,</span><span class="nx">innerRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animateScale</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">outerRadius</span><span class="o">/</span><span class="mi">100</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">percentageInnerCutout</span><span class="p">,</span><span class="nx">fillColor</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">highlightColor</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">highlight</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">showStroke</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">segmentShowStroke</span><span class="p">,</span><span class="nx">strokeWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">segmentStrokeWidth</span><span class="p">,</span><span class="nx">strokeColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">segmentStrokeColor</span><span class="p">,</span><span class="nx">startAngle</span><span class="o">:</span><span class="mf">1.5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="nx">circumference</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animateRotate</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateCircumference</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">),</span><span class="nx">label</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">label</span><span class="p">})),</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reflow</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">())},</span><span class="nx">calculateCircumference</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">total</span><span class="p">)},</span><span class="nx">calculateTotal</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">total</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">total</span><span class="o">+=</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">},</span><span class="k">this</span><span class="p">)},</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateTotal</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">activeElements</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">restore</span><span class="p">([</span><span class="s2">&quot;fillColor&quot;</span><span class="p">])}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">save</span><span class="p">()}),</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">()},</span><span class="nx">removeData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">?</span><span class="nx">t</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">reflow</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">()},</span><span class="nx">reflow</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">SegmentArc</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">outerRadius</span><span class="o">=</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">min</span><span class="p">([</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">])</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">segmentStrokeWidth</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">update</span><span class="p">({</span><span class="nx">outerRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">outerRadius</span><span class="p">,</span><span class="nx">innerRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">outerRadius</span><span class="o">/</span><span class="mi">100</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">percentageInnerCutout</span><span class="p">})},</span><span class="k">this</span><span class="p">)},</span><span class="nx">draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="o">?</span><span class="nx">t</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">clear</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">transition</span><span class="p">({</span><span class="nx">circumference</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateCircumference</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">),</span><span class="nx">outerRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">outerRadius</span><span class="p">,</span><span class="nx">innerRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">outerRadius</span><span class="o">/</span><span class="mi">100</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">percentageInnerCutout</span><span class="p">},</span><span class="nx">i</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">endAngle</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">circumference</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">draw</span><span class="p">(),</span><span class="mi">0</span><span class="o">===</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">=</span><span class="mf">1.5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">),</span><span class="nx">e</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">startAngle</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">endAngle</span><span class="p">)},</span><span class="k">this</span><span class="p">)}}),</span><span class="nx">i</span><span class="p">.</span><span class="nx">types</span><span class="p">.</span><span class="nx">Doughnut</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;Pie&quot;</span><span class="p">,</span><span class="nx">defaults</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="nx">s</span><span class="p">,{</span><span class="nx">percentageInnerCutout</span><span class="o">:</span><span class="mi">0</span><span class="p">})})}.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">Chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">helpers</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">scaleShowGridLines</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scaleGridLineColor</span><span class="o">:</span><span class="s2">&quot;rgba(0,0,0,.05)&quot;</span><span class="p">,</span><span class="nx">scaleGridLineWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">bezierCurve</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">bezierCurveTension</span><span class="o">:</span><span class="p">.</span><span class="mi">4</span><span class="p">,</span><span class="nx">pointDot</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">pointDotRadius</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">pointDotStrokeWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">pointHitDetectionRadius</span><span class="o">:</span><span class="mi">20</span><span class="p">,</span><span class="nx">datasetStroke</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">datasetStrokeWidth</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">datasetFill</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">legendTemplate</span><span class="o">:</span><span class="s1">&#39;&lt;ul class=&quot;&lt;%=name.toLowerCase()%&gt;-legend&quot;&gt;&lt;% for (var i=0; i&lt;datasets.length; i++){%&gt;&lt;li&gt;&lt;span style=&quot;background-color:&lt;%=datasets[i].strokeColor%&gt;&quot;&gt;&lt;/span&gt;&lt;%if(datasets[i].label){%&gt;&lt;%=datasets[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;&#39;</span><span class="p">};</span><span class="nx">i</span><span class="p">.</span><span class="nx">Type</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;Line&quot;</span><span class="p">,</span><span class="nx">defaults</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">PointClass</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">Point</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">strokeWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointDotStrokeWidth</span><span class="p">,</span><span class="nx">radius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointDotRadius</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointDot</span><span class="p">,</span><span class="nx">hitDetectionRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointHitDetectionRadius</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">inRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">radius</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">hitDetectionRadius</span><span class="p">,</span><span class="mi">2</span><span class="p">)}}),</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showTooltips</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">bindEvents</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipEvents</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="s2">&quot;mouseout&quot;</span><span class="o">!==</span><span class="nx">t</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getPointsAtEvent</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">eachPoints</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">restore</span><span class="p">([</span><span class="s2">&quot;fillColor&quot;</span><span class="p">,</span><span class="s2">&quot;strokeColor&quot;</span><span class="p">])}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillColor</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">highlightFill</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeColor</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">highlightStroke</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">showTooltip</span><span class="p">(</span><span class="nx">i</span><span class="p">)}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">label</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">label</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">fillColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">strokeColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">strokeColor</span><span class="p">,</span><span class="nx">pointColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointColor</span><span class="p">,</span><span class="nx">pointStrokeColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointStrokeColor</span><span class="p">,</span><span class="nx">points</span><span class="o">:</span><span class="p">[]};</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="nx">s</span><span class="p">.</span><span class="nx">points</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">PointClass</span><span class="p">({</span><span class="nx">value</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">label</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">datasetLabel</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">label</span><span class="p">,</span><span class="nx">strokeColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointStrokeColor</span><span class="p">,</span><span class="nx">fillColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointColor</span><span class="p">,</span><span class="nx">highlightFill</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointHighlightFill</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointColor</span><span class="p">,</span><span class="nx">highlightStroke</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointHighlightStroke</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointStrokeColor</span><span class="p">}))},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">buildScale</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">labels</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">eachPoints</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateX</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">}),</span><span class="nx">t</span><span class="p">.</span><span class="nx">save</span><span class="p">()},</span><span class="k">this</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">()},</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">update</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">activeElements</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">restore</span><span class="p">([</span><span class="s2">&quot;fillColor&quot;</span><span class="p">,</span><span class="s2">&quot;strokeColor&quot;</span><span class="p">])}),</span><span class="k">this</span><span class="p">.</span><span class="nx">eachPoints</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">save</span><span class="p">()}),</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">()},</span><span class="nx">eachPoints</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="k">this</span><span class="p">)},</span><span class="nx">getPointsAtEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">[],</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getRelativePosition</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">inRange</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">)})},</span><span class="k">this</span><span class="p">),</span><span class="nx">i</span><span class="p">},</span><span class="nx">buildScale</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">eachPoints</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">value</span><span class="p">)}),</span><span class="nx">t</span><span class="p">},</span><span class="nx">o</span><span class="o">=</span><span class="p">{</span><span class="nx">templateString</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleLabel</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">textColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontColor</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontSize</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontStyle</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontFamily</span><span class="p">,</span><span class="nx">valuesCount</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">beginAtZero</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleBeginAtZero</span><span class="p">,</span><span class="nx">integersOnly</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleIntegersOnly</span><span class="p">,</span><span class="nx">calculateYRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">calculateScaleRange</span><span class="p">(</span><span class="nx">n</span><span class="p">(),</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">beginAtZero</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">integersOnly</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="p">)},</span><span class="nx">xLabels</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">font</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontString</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontStyle</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontFamily</span><span class="p">),</span><span class="nx">lineWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleLineWidth</span><span class="p">,</span><span class="nx">lineColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleLineColor</span><span class="p">,</span><span class="nx">gridLineWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleShowGridLines</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleGridLineWidth</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">gridLineColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleShowGridLines</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleGridLineColor</span><span class="o">:</span><span class="s2">&quot;rgba(0,0,0,0)&quot;</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showScale</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointDotRadius</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointDotStrokeWidth</span><span class="p">,</span><span class="nx">showLabels</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleShowLabels</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showScale</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleOverride</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">o</span><span class="p">,{</span><span class="nx">calculateYRange</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">steps</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleSteps</span><span class="p">,</span><span class="nx">stepValue</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStepWidth</span><span class="p">,</span><span class="nx">min</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStartValue</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStartValue</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleSteps</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStepWidth</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="k">new</span> <span class="nx">i</span><span class="p">.</span><span class="nx">Scale</span><span class="p">(</span><span class="nx">o</span><span class="p">)},</span><span class="nx">addData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">points</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">PointClass</span><span class="p">({</span><span class="nx">value</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">label</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateX</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">valuesCount</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">,</span><span class="nx">strokeColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">pointStrokeColor</span><span class="p">,</span><span class="nx">fillColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">pointColor</span><span class="p">}))},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">addXLabel</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">()},</span><span class="nx">removeData</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">removeXLabel</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">points</span><span class="p">.</span><span class="nx">shift</span><span class="p">()},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">()},</span><span class="nx">reflow</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">t</span><span class="p">)},</span><span class="nx">draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">!==</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">},</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">findNextWhere</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="p">)</span><span class="o">||</span><span class="nx">t</span><span class="p">},</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">findPreviousWhere</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="p">)</span><span class="o">||</span><span class="nx">t</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">draw</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">where</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">hasValue</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">transition</span><span class="p">({</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateY</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">),</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateX</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="nx">i</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">bezierCurve</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">i</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">bezierCurveTension</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">controlPoints</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">splineCurve</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">t</span><span class="p">,</span><span class="nx">o</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">s</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">controlPoints</span><span class="p">.</span><span class="nx">outer</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">controlPoints</span><span class="p">.</span><span class="nx">outer</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">controlPoints</span><span class="p">.</span><span class="nx">outer</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">startPoint</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">controlPoints</span><span class="p">.</span><span class="nx">outer</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">startPoint</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">controlPoints</span><span class="p">.</span><span class="nx">inner</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">controlPoints</span><span class="p">.</span><span class="nx">inner</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">controlPoints</span><span class="p">.</span><span class="nx">inner</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">startPoint</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">controlPoints</span><span class="p">.</span><span class="nx">inner</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">startPoint</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">datasetStrokeWidth</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeColor</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">i</span><span class="p">)</span><span class="nx">s</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">bezierCurve</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="nx">s</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">controlPoints</span><span class="p">.</span><span class="nx">outer</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">controlPoints</span><span class="p">.</span><span class="nx">outer</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">controlPoints</span><span class="p">.</span><span class="nx">inner</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">controlPoints</span><span class="p">.</span><span class="nx">inner</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">)}</span><span class="k">else</span> <span class="nx">s</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">datasetFill</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">endPoint</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">s</span><span class="p">.</span><span class="nx">fill</span><span class="p">()),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">draw</span><span class="p">()})},</span><span class="k">this</span><span class="p">)}})}.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">Chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">helpers</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">scaleShowLabelBackdrop</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scaleBackdropColor</span><span class="o">:</span><span class="s2">&quot;rgba(255,255,255,0.75)&quot;</span><span class="p">,</span><span class="nx">scaleBeginAtZero</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scaleBackdropPaddingY</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">scaleBackdropPaddingX</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">scaleShowLine</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">segmentShowStroke</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">segmentStrokeColor</span><span class="o">:</span><span class="s2">&quot;#fff&quot;</span><span class="p">,</span><span class="nx">segmentStrokeWidth</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">animationSteps</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">animationEasing</span><span class="o">:</span><span class="s2">&quot;easeOutBounce&quot;</span><span class="p">,</span><span class="nx">animateRotate</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">animateScale</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">legendTemplate</span><span class="o">:</span><span class="s1">&#39;&lt;ul class=&quot;&lt;%=name.toLowerCase()%&gt;-legend&quot;&gt;&lt;% for (var i=0; i&lt;segments.length; i++){%&gt;&lt;li&gt;&lt;span style=&quot;background-color:&lt;%=segments[i].fillColor%&gt;&quot;&gt;&lt;/span&gt;&lt;%if(segments[i].label){%&gt;&lt;%=segments[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;&#39;</span><span class="p">};</span><span class="nx">i</span><span class="p">.</span><span class="nx">Type</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;PolarArea&quot;</span><span class="p">,</span><span class="nx">defaults</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">SegmentArc</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">Arc</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">showStroke</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">segmentShowStroke</span><span class="p">,</span><span class="nx">strokeWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">segmentStrokeWidth</span><span class="p">,</span><span class="nx">strokeColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">segmentStrokeColor</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">innerRadius</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="k">new</span> <span class="nx">i</span><span class="p">.</span><span class="nx">RadialScale</span><span class="p">({</span><span class="nx">display</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showScale</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontStyle</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontSize</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontFamily</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontColor</span><span class="p">,</span><span class="nx">showLabels</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleShowLabels</span><span class="p">,</span><span class="nx">showLabelBackdrop</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleShowLabelBackdrop</span><span class="p">,</span><span class="nx">backdropColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleBackdropColor</span><span class="p">,</span><span class="nx">backdropPaddingY</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleBackdropPaddingY</span><span class="p">,</span><span class="nx">backdropPaddingX</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleBackdropPaddingX</span><span class="p">,</span><span class="nx">lineWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleShowLine</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleLineWidth</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">lineColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleLineColor</span><span class="p">,</span><span class="nx">lineArc</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">xCenter</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">yCenter</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">templateString</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleLabel</span><span class="p">,</span><span class="nx">valuesCount</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">updateScaleRange</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">update</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">addData</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showTooltips</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">bindEvents</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipEvents</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="s2">&quot;mouseout&quot;</span><span class="o">!==</span><span class="nx">t</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getSegmentsAtEvent</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="p">[];</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">restore</span><span class="p">([</span><span class="s2">&quot;fillColor&quot;</span><span class="p">])}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillColor</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">highlightColor</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">showTooltip</span><span class="p">(</span><span class="nx">i</span><span class="p">)}),</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">()},</span><span class="nx">getSegmentsAtEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">[],</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getRelativePosition</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">inRange</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="nx">i</span><span class="p">},</span><span class="nx">addData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">i</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">SegmentArc</span><span class="p">({</span><span class="nx">fillColor</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">highlightColor</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">highlight</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">label</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">label</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">outerRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animateScale</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateCenterOffset</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">),</span><span class="nx">circumference</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animateRotate</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">getCircumference</span><span class="p">(),</span><span class="nx">startAngle</span><span class="o">:</span><span class="mf">1.5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">})),</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reflow</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">())},</span><span class="nx">removeData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">?</span><span class="nx">t</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">reflow</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">()},</span><span class="nx">calculateTotal</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">total</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">total</span><span class="o">+=</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">valuesCount</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">.</span><span class="nx">length</span><span class="p">},</span><span class="nx">updateScaleRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">[];</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleOverride</span><span class="o">?</span><span class="p">{</span><span class="nx">steps</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleSteps</span><span class="p">,</span><span class="nx">stepValue</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStepWidth</span><span class="p">,</span><span class="nx">min</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStartValue</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStartValue</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleSteps</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStepWidth</span><span class="p">}</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">calculateScaleRange</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">min</span><span class="p">([</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">])</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleBeginAtZero</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleIntegersOnly</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">,</span><span class="nx">s</span><span class="p">,{</span><span class="nx">size</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">min</span><span class="p">([</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">]),</span><span class="nx">xCenter</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">yCenter</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">})},</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateTotal</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">save</span><span class="p">()}),</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">()},</span><span class="nx">reflow</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">SegmentArc</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">updateScaleRange</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">update</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">,{</span><span class="nx">xCenter</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">yCenter</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">update</span><span class="p">({</span><span class="nx">outerRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateCenterOffset</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">)})},</span><span class="k">this</span><span class="p">)},</span><span class="nx">draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">clear</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">transition</span><span class="p">({</span><span class="nx">circumference</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">getCircumference</span><span class="p">(),</span><span class="nx">outerRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateCenterOffset</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">)},</span><span class="nx">i</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">endAngle</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">circumference</span><span class="p">,</span><span class="mi">0</span><span class="o">===</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">=</span><span class="mf">1.5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">),</span><span class="nx">e</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">startAngle</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">endAngle</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">draw</span><span class="p">()},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">draw</span><span class="p">()}})}.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">Chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">helpers</span><span class="p">;</span><span class="nx">i</span><span class="p">.</span><span class="nx">Type</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;Radar&quot;</span><span class="p">,</span><span class="nx">defaults</span><span class="o">:</span><span class="p">{</span><span class="nx">scaleShowLine</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">angleShowLineOut</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scaleShowLabels</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">scaleBeginAtZero</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">angleLineColor</span><span class="o">:</span><span class="s2">&quot;rgba(0,0,0,.1)&quot;</span><span class="p">,</span><span class="nx">angleLineWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">pointLabelFontFamily</span><span class="o">:</span><span class="s2">&quot;&#39;Arial&#39;&quot;</span><span class="p">,</span><span class="nx">pointLabelFontStyle</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">pointLabelFontSize</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">pointLabelFontColor</span><span class="o">:</span><span class="s2">&quot;#666&quot;</span><span class="p">,</span><span class="nx">pointDot</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">pointDotRadius</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">pointDotStrokeWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">pointHitDetectionRadius</span><span class="o">:</span><span class="mi">20</span><span class="p">,</span><span class="nx">datasetStroke</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">datasetStrokeWidth</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">datasetFill</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">legendTemplate</span><span class="o">:</span><span class="s1">&#39;&lt;ul class=&quot;&lt;%=name.toLowerCase()%&gt;-legend&quot;&gt;&lt;% for (var i=0; i&lt;datasets.length; i++){%&gt;&lt;li&gt;&lt;span style=&quot;background-color:&lt;%=datasets[i].strokeColor%&gt;&quot;&gt;&lt;/span&gt;&lt;%if(datasets[i].label){%&gt;&lt;%=datasets[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;&#39;</span><span class="p">},</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">PointClass</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">Point</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">strokeWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointDotStrokeWidth</span><span class="p">,</span><span class="nx">radius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointDotRadius</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointDot</span><span class="p">,</span><span class="nx">hitDetectionRadius</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointHitDetectionRadius</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">buildScale</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showTooltips</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">bindEvents</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltipEvents</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="s2">&quot;mouseout&quot;</span><span class="o">!==</span><span class="nx">t</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getPointsAtEvent</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">eachPoints</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">restore</span><span class="p">([</span><span class="s2">&quot;fillColor&quot;</span><span class="p">,</span><span class="s2">&quot;strokeColor&quot;</span><span class="p">])}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillColor</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">highlightFill</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeColor</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">highlightStroke</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">showTooltip</span><span class="p">(</span><span class="nx">i</span><span class="p">)}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">label</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">label</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">fillColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">strokeColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">strokeColor</span><span class="p">,</span><span class="nx">pointColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointColor</span><span class="p">,</span><span class="nx">pointStrokeColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointStrokeColor</span><span class="p">,</span><span class="nx">points</span><span class="o">:</span><span class="p">[]};</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">animation</span><span class="o">||</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">getPointPosition</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateCenterOffset</span><span class="p">(</span><span class="nx">e</span><span class="p">))),</span><span class="nx">s</span><span class="p">.</span><span class="nx">points</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">PointClass</span><span class="p">({</span><span class="nx">value</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">label</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">datasetLabel</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">label</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animation</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">xCenter</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animation</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">yCenter</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">strokeColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointStrokeColor</span><span class="p">,</span><span class="nx">fillColor</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointColor</span><span class="p">,</span><span class="nx">highlightFill</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointHighlightFill</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointColor</span><span class="p">,</span><span class="nx">highlightStroke</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointHighlightStroke</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">pointStrokeColor</span><span class="p">}))},</span><span class="k">this</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">()},</span><span class="nx">eachPoints</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="k">this</span><span class="p">)},</span><span class="nx">getPointsAtEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getRelativePosition</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getAngleFromPoint</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">xCenter</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">yCenter</span><span class="p">},</span><span class="nx">i</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">valuesCount</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">((</span><span class="nx">s</span><span class="p">.</span><span class="nx">angle</span><span class="o">-</span><span class="mf">1.5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">/</span><span class="nx">n</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span><span class="p">(</span><span class="nx">o</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">valuesCount</span><span class="o">||</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">o</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">distance</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">drawingArea</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">points</span><span class="p">[</span><span class="nx">o</span><span class="p">])}),</span><span class="nx">a</span><span class="p">},</span><span class="nx">buildScale</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="k">new</span> <span class="nx">i</span><span class="p">.</span><span class="nx">RadialScale</span><span class="p">({</span><span class="nx">display</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showScale</span><span class="p">,</span><span class="nx">fontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontStyle</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontSize</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontFamily</span><span class="p">,</span><span class="nx">fontColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontColor</span><span class="p">,</span><span class="nx">showLabels</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleShowLabels</span><span class="p">,</span><span class="nx">showLabelBackdrop</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleShowLabelBackdrop</span><span class="p">,</span><span class="nx">backdropColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleBackdropColor</span><span class="p">,</span><span class="nx">backdropPaddingY</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleBackdropPaddingY</span><span class="p">,</span><span class="nx">backdropPaddingX</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleBackdropPaddingX</span><span class="p">,</span><span class="nx">lineWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleShowLine</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleLineWidth</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">lineColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleLineColor</span><span class="p">,</span><span class="nx">angleLineColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">angleLineColor</span><span class="p">,</span><span class="nx">angleLineWidth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">angleShowLineOut</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">angleLineWidth</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">pointLabelFontColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointLabelFontColor</span><span class="p">,</span><span class="nx">pointLabelFontSize</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointLabelFontSize</span><span class="p">,</span><span class="nx">pointLabelFontFamily</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointLabelFontFamily</span><span class="p">,</span><span class="nx">pointLabelFontStyle</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointLabelFontStyle</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">xCenter</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">yCenter</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">templateString</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleLabel</span><span class="p">,</span><span class="nx">labels</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">labels</span><span class="p">,</span><span class="nx">valuesCount</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">setScaleSize</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">updateScaleRange</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">datasets</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">buildYLabels</span><span class="p">()},</span><span class="nx">updateScaleRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">data</span><span class="o">?</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">)})}),</span><span class="nx">i</span><span class="p">}(),</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleOverride</span><span class="o">?</span><span class="p">{</span><span class="nx">steps</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleSteps</span><span class="p">,</span><span class="nx">stepValue</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStepWidth</span><span class="p">,</span><span class="nx">min</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStartValue</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStartValue</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleSteps</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleStepWidth</span><span class="p">}</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">calculateScaleRange</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">min</span><span class="p">([</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">])</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleFontSize</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleBeginAtZero</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">scaleIntegersOnly</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">,</span><span class="nx">s</span><span class="p">)},</span><span class="nx">addData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">valuesCount</span><span class="o">++</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">getPointPosition</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">valuesCount</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateCenterOffset</span><span class="p">(</span><span class="nx">t</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">points</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">PointClass</span><span class="p">({</span><span class="nx">value</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">label</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">strokeColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">pointStrokeColor</span><span class="p">,</span><span class="nx">fillColor</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">pointColor</span><span class="p">}))},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">labels</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">reflow</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">()},</span><span class="nx">removeData</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">valuesCount</span><span class="o">--</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">labels</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">points</span><span class="p">.</span><span class="nx">shift</span><span class="p">()},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">reflow</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">()},</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">eachPoints</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">save</span><span class="p">()}),</span><span class="k">this</span><span class="p">.</span><span class="nx">reflow</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">()},</span><span class="nx">reflow</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">min</span><span class="p">([</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="p">]),</span><span class="nx">xCenter</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">yCenter</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">updateScaleRange</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">setScaleSize</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">buildYLabels</span><span class="p">()},</span><span class="nx">draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">clear</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">draw</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">datasets</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">hasValue</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">transition</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">getPointPosition</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">calculateCenterOffset</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">value</span><span class="p">)),</span><span class="nx">i</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">datasetStrokeWidth</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">strokeColor</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="mi">0</span><span class="o">===</span><span class="nx">i</span><span class="o">?</span><span class="nx">s</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">closePath</span><span class="p">(),</span><span class="nx">s</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">s</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">hasValue</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">draw</span><span class="p">()})},</span><span class="k">this</span><span class="p">)}})}.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span></td>
      </tr>
</table>

  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.02670s from github-fe120-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents js-suggester-field" placeholder=""></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-2b4202fc62ef88e1a007a9ed05df10607b189f42.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-19ba694dbe2930d7f4bf2f69535a9a7fd3a4be48.js" type="text/javascript"></script>
      
      
        <script async src="https://www.google-analytics.com/analytics.js"></script>
  </body>
</html>

